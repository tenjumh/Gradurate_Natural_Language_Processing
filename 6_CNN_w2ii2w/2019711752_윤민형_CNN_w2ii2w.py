# -*- coding: utf-8 -*-
"""2019711752_윤민형_CNN_w2ii2w.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vrj0gPAVaHFx6Mrg6AWE7yeYYConenvA
"""

!pip install PyKomoran

import json
from PyKomoran import *
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score, fbeta_score
import torch
import torch.nn.functional as F
import numpy as np
import random

def set_seed():
  random.seed(777)
  np.random.seed(777)
  torch.manual_seed(777)
  if torch.cuda.is_available():
    torch.cuda.manual_seed_all(777)

set_seed()

komoran = Komoran("EXP")

with open('./SpeechAct_tr.json', 'r', encoding='utf-8') as read_file:
    data_tr = json.load(read_file)

docs = []
for key in data_tr.keys():
    text = []
    for message in data_tr[key]:
        komoran_text = komoran.get_plain_text(message[1])
        # print(komoran_text)
        komoran_text = komoran_text.split(' ')
        text.append(komoran_text)
    docs.append(text)

words = []
for i in docs:
  for j in i:
    for k in j:
      words.append(k)

words_dic = sorted(set(words))

# words_dic = sorted(words_dic)

len(words_dic)

w2i = {}
i2w = {}
w2i['<PAD>'] = 0
w2i['<UKN>'] = 1
for idx, word in enumerate(words_dic):
  w2i[word] = idx + 2
for word, idx in w2i.items():
  i2w[idx] = word

save_file_name = '2019711752_윤민형_CNN_w2ii2w'
with open('./'+save_file_name+'.txt', 'w', encoding='utf-8', newline='') as writer_text:
  list = ['word2idx', 'idx2word']
  writer_text.writelines(list[0] + '\n')
  for word, idx in w2i.items():
    writer_text.writelines(word + '\t' + str(idx) + '\n')
  writer_text.writelines('\n' + list[1] + '\n')
  for idx, word in i2w.items(): 
    writer_text.writelines(str(idx) + '\t' + word + '\n') 
  #writer_text.close()
  print("[저장 완료]")

